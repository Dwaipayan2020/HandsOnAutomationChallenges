{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 2}, "tests": {"0": {"status": "ERROR", "message": "request = <SubRequest 'setup' for <Function test_01>>\n\n    @pytest.fixture(scope=\"session\")\n    def setup(request):\n        global driver\n        print(\"inside set up\")\n        browser_name = request.config.getoption(\"browser\")\n        driver_path = curr_dir + \"./driver\"\n        if browser_name == \"chrome\":\n            driver = webdriver.Chrome(ChromeDriverManager().install())\n        if browser_name == \"edge\":\n            driver = webdriver.Edge(executable_path=driver_path + \"./msedgedriver.exe\")\n    \n        application_url = __get_application_url()\n        driver.get(application_url)\n    \n        driver.maximize_window()\n        # Purpose is to refresh the page\n        driver.refresh()\n>       request.cls.browser = driver\nE       AttributeError: cls not available in session-scoped context\n\nuiautomationTests\\conftest.py:34: AttributeError\n", "test_name": "test_01", "rerun": "0"}, "1": {"status": "ERROR", "message": "request = <SubRequest 'setup' for <Function test_01>>\n\n    @pytest.fixture(scope=\"session\")\n    def setup(request):\n        global driver\n        print(\"inside set up\")\n        browser_name = request.config.getoption(\"browser\")\n        driver_path = curr_dir + \"./driver\"\n        if browser_name == \"chrome\":\n            driver = webdriver.Chrome(ChromeDriverManager().install())\n        if browser_name == \"edge\":\n            driver = webdriver.Edge(executable_path=driver_path + \"./msedgedriver.exe\")\n    \n        application_url = __get_application_url()\n        driver.get(application_url)\n    \n        driver.maximize_window()\n        # Purpose is to refresh the page\n        driver.refresh()\n>       request.cls.browser = driver\nE       AttributeError: cls not available in session-scoped context\n\nuiautomationTests\\conftest.py:34: AttributeError\n", "test_name": "test_03", "rerun": "0"}}, "suite_name": "tests/test_scenario_01.py"}, "1": {"suite_name": "tests/test_scenario_02.py", "tests": {"0": {"status": "ERROR", "message": "request = <SubRequest 'setup' for <Function test_01>>\n\n    @pytest.fixture(scope=\"session\")\n    def setup(request):\n        global driver\n        print(\"inside set up\")\n        browser_name = request.config.getoption(\"browser\")\n        driver_path = curr_dir + \"./driver\"\n        if browser_name == \"chrome\":\n            driver = webdriver.Chrome(ChromeDriverManager().install())\n        if browser_name == \"edge\":\n            driver = webdriver.Edge(executable_path=driver_path + \"./msedgedriver.exe\")\n    \n        application_url = __get_application_url()\n        driver.get(application_url)\n    \n        driver.maximize_window()\n        # Purpose is to refresh the page\n        driver.refresh()\n>       request.cls.browser = driver\nE       AttributeError: cls not available in session-scoped context\n\nuiautomationTests\\conftest.py:34: AttributeError\n", "test_name": "test_02", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}}}, "date": "September 01, 2022", "start_time": 1662043715.0588942, "total_suite": 2, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "3", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "3"}